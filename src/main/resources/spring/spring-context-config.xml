<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
       ">

    <context:component-scan base-package="com.scott.fu.core,com.scott.fu.service,com.scott.fu.dao"/>
    <context:component-scan base-package="com.scott.fu.job"/>
    <context:component-scan base-package="com.scott.fu.dto"/>

    <context:annotation-config />
    <mvc:annotation-driven />
    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="5" />
        <property name="maxActive" value="100" />
        <property name="maxIdle" value="30" />
        <property name="maxWait" value="1000" />
        <property name="poolPreparedStatements" value="true" />
        <property name="defaultAutoCommit" value="false" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>

    <bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>

    <bean id="jdbcDaoSupport" abstract="true" class="org.springframework.jdbc.core.support.JdbcDaoSupport">
        <property name="jdbcTemplate">
            <ref bean = "jdbcTemplate"/>
        </property>
    </bean>

    <!-- data sources-->
    <!--
    <bean id="dataSourceCustom" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

    </bean>
    -->



    <!--<bean id="dataSource" class="com.scott.fu.core.DynamicDataSource">
        <property name="targetDataSources">
            <map>
                <entry value-ref="dataSourceODS" key="dataSourceODS"/>
                <entry value-ref="dataSourceCustom" key="dataSourceCustom"/>
            </map>
        </property>
    </bean>-->

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceCustom" />
        <property name="typeAliasesPackage" value="com.scott.fu.entity"/>
        <property name="mapperLocations" value="classpath*:mybatis/mappers/**/*.xml" />
        <property name="configLocation" value="classpath*:mybatis/config/ods/mybatis-config-ods.xml" />
    </bean>-->

    <!-- session factory for mybatis-->
    <bean id="sqlSessionFactoryCust" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.scott.fu.entity"/>
        <property name="mapperLocations" value="classpath:mybatis/mappers/cust/*.xml" />
        <property name="configLocation" value="classpath:mybatis/config/cust/mybatis-config.xml" />
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactoryCust" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.scott.fu.dao" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="quartzJob" class="com.scott.fu.job.CacheDataJob"></bean>
    <bean id="jobTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="quartzJob"/>
        </property>
        <property name="targetMethod">
            <value>loadCache</value>
        </property>
    </bean>

    <bean id="doTime" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <ref bean="jobTask"/>
        </property>
        <property name="startDelay">
            <value>100</value>
        </property>
        <property name="repeatInterval" value="3600000" />
<!--        <property name="cronExpression">
            <value>0/60 * * * * ?</value>
        </property>-->
    </bean>
    <bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTime"/>
            </list>
        </property>
    </bean>
    <bean id="springContextUtil" class="com.scott.fu.util.SpringContextUtil"/>
</beans>